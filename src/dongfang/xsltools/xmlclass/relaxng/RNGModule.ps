%!PS-Adobe-3.0
%%Title: RNGModule.java
%%For: Soren Kuula
%%Creator: a2ps version 4.13
%%CreationDate: Tue Nov 15 21:23:46 2005
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% composite fonts for ASCII-EUC mixed string
% Version 1.2 1/31/1990
% Orignal Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(/*) c n
( * dongfang M. Sc. Thesis) N
( * Created on 2005-09-26) N
( */) N
(package) K
( dongfang.xsltools.xmlclass.relaxng;) p n
() N
(import) K
( java.util.Collection;) p n
(import) K
( java.util.HashMap;) p n
(import) K
( java.util.HashSet;) p n
(import) K
( java.util.Iterator;) p n
(import) K
( java.util.LinkedList;) p n
(import) K
( java.util.ListIterator;) p n
(import) K
( java.util.Map;) p n
(import) K
( java.util.Set;) p n
() N
(import) K
( org.dom4j.Document;) p n
(import) K
( org.dom4j.Element;) p n
(import) K
( org.dom4j.QName;) p n
() N
(import) K
( dk.brics.automaton.Automaton;) p n
(import) K
( dk.brics.automaton.State;) p n
(import) K
( dk.brics.automaton.Transition;) p n
(import) K
( dongfang.xsltools.exceptions.XSLToolsException;) p n
(import) K
( dongfang.xsltools.xmlclass.CharGenerator;) p n
(import) K
( dongfang.xsltools.xmlclass.schemaside.AttributeDecl;) p n
(import) K
( dongfang.xsltools.xmlclass.schemaside.ElementDecl;) p n
(import) K
( dongfang.xsltools.xmlclass.schemaside.RegularTreeXMLClass;) p n
(import) K
( dongfang.xsltools.xmlclass.xslside.CommentNT;) p n
(import) K
( dongfang.xsltools.xmlclass.xslside.NodeType;) p n
(import) K
( dongfang.xsltools.xmlclass.xslside.PINT;) p n
(import) K
( dongfang.xsltools.xpath.jaxen.NodeSetLocationPath;) p n
() N
(/**) C n
( * Representation of a RNG grammar.) N
( * ) N
( * @author snk) N
( */) N
(public) K
( ) p
(class) K
( ) p
(RNGModule) L
( ) p
(extends) K
( RegularTreeXMLClass {) p n
() N
(  ) S
(// public static final int SELF = 0;) c n
(  ) p
(// public static final int PARENT = 1;) c n
(  ) p
(// private RNGModule parent;) c n
() p n
(  ) S
(private) K
( Map<String, RNGElementDecl> definitions = ) p
(new) K
( HashMap<String, RNGEleme) p n
(ntDecl>\(\);) N
() N
(  RNGModule\(Document xml\) ) S
(throws) K
( XSLToolsException {) p n
(    init\(xml\);) N
(  }) N
() N
(  ) S
(void) k
( init\(Document xml\) ) p
(throws) K
( XSLToolsException {) p n
() N
(    Element documentElement = xml.getRootElement\(\);) N
() N
(    ) S
(if) K
( \(!documentElement.getNamespaceURI\(\).equals\() p n
(        RelaxNGConstants.NAMESPACE_URI\)\)) N
(      ) S
(throw) K
( ) p
(new) K
( XSLToolsException\() p n
(          ") S
(Document seems not to be a Relax NG Schema instance) str
("\);) p n
() N
(    ) S
(/*) c n
(     * If the document is not rooted in a grammar, make it that) N
(     */) N
(    ) p
(/*) c n
(     * if \(!documentElement.getName\(\).equals\(RelaxNGConstants.ELEM_GRAMMAR\)\) {) N
(     * Element grammar = fac.createElement\(RelaxNGConstants.ELEM_GRAMMAR_QNAME\);) N
(     * Element start = fac.createElement\(RelaxNGConstants.ELEM_START_QNAME\);) N
(     * grammar.add\(start\); documentElement.detach\(\); start.add\(documentElement\);) N
(     * xml.add\(grammar\); documentElement = grammar; }) N
(     */) N
(RNGModule.java) (Page 1/6) (Nov 06, 05 14:47) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(/*) c n
(     * Sniff out the start element) N
(     */) N
(    String startName = ) p
(null) k
(;) p n
() N
(    ) S
(/*) c n
(     * Make up start and defintion sets) N
(     */) N
() p n
(    ) S
(for) K
( \(Iterator<Element> child = documentElement.elementIterator\(\); child) p n
(        .hasNext\(\);\) {) N
(      Element temp = child.next\(\);) N
() N
(      ) S
(if) K
( \(temp.getQName\(\).equals\(RelaxNGConstants.ELEM_START_QNAME\)\) {) p n
(        ) S
(if) K
( \(startName != ) p
(null) k
(\)) p n
(          ) S
(throw) K
( ) p
(new) K
( XSLToolsException\(") p
(More than one start element!) str
("\);) p n
(        Element startDef = \(Element\) temp.elements\(\).get\(0\);) N
(        startName = startDef.attributeValue\(RelaxNGConstants.ATTR_NAME_QNAME\);) N
() N
(      } ) S
(else) K
( ) p
(if) K
( \(temp.getQName\(\).equals\(RelaxNGConstants.ELEM_DEFINE_QNAME\)\) {) p n
(        String name = temp.attributeValue\(RelaxNGConstants.ATTR_NAME_QNAME\);) N
(        ) S
(if) K
( \(name == ) p
(null) k
(\)) p n
(          ) S
(throw) K
( ) p
(new) K
( XSLToolsException\(") p
(Definition had no name!) str
("\);) p n
(        Element decl = \(Element\) temp.elements\(\).get\(0\);) N
(        QName qname = getElementDeclarationName\(decl\);) N
() N
(        RNGElementDecl element = ) S
(new) K
( RNGElementDecl\(qname, decl, ) p
(this) k
(\);) p n
() N
(        definitions.put\(name, element\);) N
() N
(      } ) S
(else) K
( {) p n
(        System.err.println\(") S
(Unhandled top level element: ) str
(" + temp\);) p n
(      }) N
(    }) N
() N
(    ) S
(if) K
( \(startName != ) p
(null) k
(\) {) p n
(      this.documentElementDecl = resolve\(startName\);) N
(    } ) S
(else) K n
(      ) p
(throw) K
( ) p
(new) K
( XSLToolsException\() p n
(          ") S
(Grammar had no start element \(fix-me; I don't really look so hard for them\)!) str
("\);) p n
() N
(    CharGenerator kanone = ) S
(new) K
( CharGenerator\(\);) p n
() N
(    ) S
(// Map<QName, Character> characterNames = new HashMap<QName, Character>\(\);) c n
() p n
(    ) S
(for) K
( \(Iterator<RNGElementDecl> decls = definitions.values\(\).iterator\(\); decls) p n
(        .hasNext\(\);\) {) N
(      ) S
(// String definedElementName = definition.next\(\);) c n
(      ) p
(// RNGElementDecl decl = definitions.get\(definedElementName\);) c n
(      RNGElementDecl decl = decls.next\(\);) p n
(      decl.processContentModel\() S
(this) k
(\);) p n
(      decl.fixupCharacterNames\() S
(this) k
(, kanone\);) p n
(    }) N
(    ) S
(// now everybody has a char name, and we should be able to assign 'em a) c n
(    ) p
(// ancestor language automaton) c n
(    ) p
(// how to do ... well top down I presume is the more clever ... inherit and) c n
(    ) p
(// extend parent's automaton.) c n
(    ) p
(// this.schemaATSPathAutomaton = new Automaton\(\);) c n
() p n
(    State commentOveroverroot = ) S
(new) K
( State\(\);) p n
(    State commentOverroot = ) S
(new) K
( State\(\);) p n
(    State commentAccept = ) S
(new) K
( State\(\);) p n
(    commentAccept.setAccept\() S
(true) k
(\);) p n
(    commentNodeTypeAutomaton.setInitialState\(commentOveroverroot\);) N
() N
(    commentOveroverroot.addTransition\() S
(new) K
( Transition\(CharGenerator) p n
(        .getRootChar\(\), commentOverroot\)\);) N
() N
(    State PIOveroverroot = ) S
(new) K
( State\(\);) p n
(RNGModule.java) (Page 2/6) (Nov 06, 05 14:47) title
border
grestore
(Printed by Soren Kuula) rhead
(RNGModule.java) (1/3) (Tuesday November 15, 2005) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    State PIOverroot = ) p
(new) K
( State\(\);) p n
(    State PIAccept = ) S
(new) K
( State\(\);) p n
(    PIAccept.setAccept\() S
(true) k
(\);) p n
(    PINodeTypeAutomaton.setInitialState\(PIOveroverroot\);) N
() N
(    PIOveroverroot.addTransition\() S
(new) K
( Transition\(CharGenerator.getRootChar\(\),) p n
(        PIOverroot\)\);) N
() N
(    State textOveroverroot = ) S
(new) K
( State\(\);) p n
(    State textOverroot = ) S
(new) K
( State\(\);) p n
(    State textAccept = ) S
(new) K
( State\(\);) p n
(    textAccept.setAccept\() S
(true) k
(\);) p n
(    textNodeTypeAutomaton.setInitialState\(textOveroverroot\);) N
() N
(    textOveroverroot.addTransition\() S
(new) K
( Transition\(CharGenerator.getRootChar\(\),) p n
(        textOverroot\)\);) N
() N
(    State overoverroot = ) S
(new) K
( State\(\);) p n
(    State overroot = ) S
(new) K
( State\(\);) p n
() N
(    ) S
(// Automaton allElementsAutomaton = new Automaton\(\);) c n
(    this.schemaATSPathAutomaton.setInitialState\(overoverroot\);) p n
() N
(    overoverroot.addTransition\() S
(new) K
( Transition\(CharGenerator.getRootChar\(\),) p n
(        overroot\)\);) N
() N
(    \(\(RNGElementDecl\) documentElementDecl\).constructATSPathAutomaton\(overroot,) N
(        commentOverroot, commentAccept, PIOverroot, PIAccept, textOverroot,) N
(        textAccept\);) N
() N
(    ) S
(for) K
( \(RNGElementDecl decl : definitions.values\(\)\) {) p n
(      ) S
(// This is only for the abstract evaluation, really.) c n
(      addElementDeclaration\(decl\);) p n
(      ) S
(// Plug in element \(and, hopefully, soon attribute\) individual automata.) c n
(      decl.makeATSPathAutomaton\() p
(this) k
(\);) p n
() N
(      ) S
(if) K
( \(decl.acceptsCommentsPIs\(\)\) {) p n
(        ) S
(// Add element as possible parent:) c n
(        commentPIParents.add\(decl\);) p n
(      }) N
() N
(      ) S
(// Possibly add element as possible parent of PCDATA:) c n
(      ) p
(if) K
( \(decl.acceptsText\(\)\) {) p n
(        ) S
(// Add element as possible parent:) c n
(        pcDataParents.add\(decl\);) p n
(      }) N
(    }) N
() N
(    ) S
(// for the valid ancestor path automaton for the whole grammar, set all) c n
(    ) p
(// states to true) c n
(    ) p
(// TODO: It also needs to accept comment and PI for any bloody element +) c n
(    ) p
(// root,) c n
(    ) p
(// as well as attributes and PCData. However it does accept root already) c n
(    ) p
(// TODO: On the other hand there is no individual automaton for root.) c n
(    ) p
(// It should be possible to make an easy automaton for comments and PIs:) c n
(    ) p
(// Just make a \(rootchar | elementregexp\) . \(commentchar | PIchar\) regexp,) c n
(    ) p
(// and then cook an automaton on that.) c n
(    ) p
(// Maybe this hack is just confusing.) c n
() p n
(    overroot.setAccept\() S
(true) k
(\);) p n
(    Automaton acceptRoot = \(Automaton\) schemaATSPathAutomaton.clone\(\);) N
(    overroot.setAccept\() S
(false) k
(\);) p n
(    this.rootNodeTypeAutomaton = acceptRoot;) N
() N
(    commentOverroot.addTransition\() S
(new) K
( Transition\(CommentNT.instance) p n
(        .getCharRepresentation\() S
(this) k
(\), commentAccept\)\);) p n
(    PIOverroot.addTransition\() S
(new) K
( Transition\(PINT.instance) p n
(        .getCharRepresentation\() S
(this) k
(\), PIAccept\)\);) p n
() N
(RNGModule.java) (Page 3/6) (Nov 06, 05 14:47) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    fixUpAutomata\(overoverroot, overroot\);) p n
() N
(    elementRegExp = kanone.getElementRegExp\(\);) N
(    attributeRegExp = kanone.getAttributeRegExp\(\);) N
(  }) N
() N
(  ) S
(static) K
( QName getElementDeclarationName\(Element decl\) {) p n
(    Element nameCarrier = \(Element\) decl.elements\(\).get\(0\);) N
(    String ns = decl.attributeValue\(RelaxNGConstants.ATTR_NS_QNAME\);) N
(    String elementName = nameCarrier.getText\(\);) N
(    ) S
(return) K
( QName.get\(elementName, ns\);) p n
(  }) N
() N
(  RNGElementDecl resolve\(String name\) {) N
(    ) S
(return) K
( definitions.get\(name\);) p n
(  }) N
() N
(  ) S
(public) K
( AttributeDecl getAttributeDecl\(QName elementName, QName attributeName\) ) p n
({) N
(    ) S
(// TODO Auto-generated method stub) c n
(    ) p
(return) K
( ) p
(null) k
(;) p n
(  }) N
() N
(  ) S
(public) K
( Set<NodeType> possibleTargetNodes\(NodeSetLocationPath path, NodeType nt) p n
(\) {) N
(    ) S
(// TODO Auto-generated method stub) c n
(    ) p
(return) K
( ) p
(null) k
(;) p n
(  }) N
() N
(  ) S
(int) k
( getMagicnumber\(\) {) p n
(    LinkedList<String> ss = ) S
(new) K
( LinkedList<String>\(\);) p n
(    LinkedList<ElementDecl> decls = ) S
(new) K
( LinkedList<ElementDecl>\(\);) p n
() N
(    ) S
(for) K
( \(RNGElementDecl elem : definitions.values\(\)\) {) p n
(      decls.add\(elem\);) N
(      Character C = elem.getCharRepresentation\() S
(null) k
(\);) p
(// characterNames.get\(elem.) c n
(getName\(\)\);) N
(      ) p
(// if \(ss[i]==null\)) c n
(      ss.add\() p
(new) K
( String\() p
(new) K
( ) p
(char) k
([] { C.charValue\(\) }\)\);) p n
(    }) N
() N
(    ) S
(int) k
( n = 0;) p n
() N
(    ) S
(while) K
( \(!ss.isEmpty\(\)\) {) p n
(      preserveOnlyDupes\(ss, decls\);) N
(      ) S
(if) K
( \(hasDupes\(decls\)\)) p n
(        ) S
(return) K
( Integer.MAX_VALUE;) p n
(      ) S
(if) K
( \(ss.size\(\) != decls.size\(\)\) {) p n
(        System.err.println\(") S
(underligt) str
("\);) p n
(      }) N
(      n++;) N
(      ListIterator<String> ssi = ss.listIterator\(\);) N
(      ListIterator<ElementDecl> declsi = decls.listIterator\(\);) N
(      ) S
(while) K
( \(ssi.hasNext\(\)\) {) p n
(        String s = ssi.next\(\);) N
(        ElementDecl decl = declsi.next\(\);) N
(        Collection<ElementDecl> parents = decl.getParentDeclarations\(\);) N
(        ) S
(boolean) k
( first = ) p
(true) k
(;) p n
(        ) S
(for) K
( \(ElementDecl parent : parents\) {) p n
(          ) S
(char) k
( c = parent.getCharRepresentation\() p
(null) k
(\);) p n
(          ) S
(if) K
( \(first\) {) p n
(            ssi.set\(s + ) S
(new) K
( String\() p
(new) K
( ) p
(char) k
([] { c }\)\);) p n
(            declsi.set\(parent\);) N
(            first = ) S
(false) k
(;) p n
(          } ) S
(else) K
( {) p n
(            ssi.add\(s + ) S
(new) K
( String\() p
(new) K
( ) p
(char) k
([] { c }\)\);) p n
(            declsi.add\(parent\);) N
(          }) N
(        }) N
(RNGModule.java) (Page 4/6) (Nov 06, 05 14:47) title
border
grestore
(Printed by Soren Kuula) rhead
(RNGModule.java) (2/3) (Tuesday November 15, 2005) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      }) p n
(    }) N
(    ) S
(return) K
( n;) p n
(  }) N
() N
(  ) S
(private) K
( ) p
(void) k
( preserveOnlyDupes\(LinkedList<String> ss,) p n
(      LinkedList<ElementDecl> decls\) {) N
(    ListIterator<String> ssi = ss.listIterator\(\);) N
(    Set<String> check = ) S
(new) K
( HashSet<String>\(\);) p n
(    Set<String> dupes = ) S
(new) K
( HashSet<String>\(\);) p n
() N
(    ) S
(while) K
( \(ssi.hasNext\(\)\) {) p n
(      String s = ssi.next\(\);) N
(      ) S
(if) K
( \(check.contains\(s\)\)) p n
(        dupes.add\(s\);) N
(      ) S
(else) K n
(        check.add\(s\);) p n
(    }) N
() N
(    ssi = ss.listIterator\(\);) N
(    ListIterator<ElementDecl> declsi = decls.listIterator\(\);) N
() N
(    ) S
(while) K
( \(ssi.hasNext\(\)\) {) p n
(      String s = ssi.next\(\);) N
(      declsi.next\(\);) N
(      ) S
(if) K
( \(!dupes.contains\(s\)\) {) p n
(        ssi.remove\(\);) N
(        declsi.remove\(\);) N
(      }) N
(    }) N
(  }) N
() N
(  ) S
(private) K
( ) p
(boolean) k
( hasDupes\(LinkedList<ElementDecl> elementDecls\) {) p n
(    ) S
(return) K
( ) p
(new) K
( HashSet<ElementDecl>\(elementDecls\).size\(\) < elementDecls.size\(\);) p n
(  }) N
() N
(  ) S
(/*) c n
(   * public Set<LinkedList<Integer>> getChoicePaths\(\) { Set<LinkedList<Integer>>) N
(   * result = new HashSet<LinkedList<Integer>>\(\); LinkedList<Integer> down =) N
(   * new LinkedList<Integer>\(\); getChoicePaths\(startElement, result, down\);) N
(   * return result; }) N
(   * ) N
(   * boolean getChoicePathsChildren\(Element e, Set<LinkedList<Integer>>) N
(   * result, LinkedList<Integer> down\) { boolean foundChoose = false; for) N
(   * \(Iterator<Element> it = e.elementIterator\(\); it.hasNext\(\);\) { if) N
(   * \(getChoicePaths\(it.next\(\), result, down\)\) foundChoose = true; } return) N
(   * foundChoose; }) N
(   * ) N
(   * boolean getChoicePaths\(Element e, Set<LinkedList<Integer>> result,) N
(   * LinkedList<Integer> down\) { if) N
(   * \(e.getNamespaceURI\(\).equals\(RelaxNGConstants.NAMESPACE_URI\)\) { if) N
(   * \(e.getName\(\).equals\(RelaxNGConstants.ELEM_REF\)\) { String name =) N
(   * e.attributeValue\(RelaxNGConstants.ATTR_NAME_QNAME\); e = resolve\(name,) N
(   * SELF\); }) N
(   * ) N
(   * if \(e.getName\(\).equals\(RelaxNGConstants.ELEM_CHOICE\)\) { int i = 0; boolean) N
(   * foundChoose = false; for \(Iterator<Element> it = e.elementIterator\(\);) N
(   * it.hasNext\(\);\) { LinkedList<Integer> temp = new LinkedList<Integer>\(down\);) N
(   * temp.add\(new Integer\(i++\)\); if \(getChoicePaths\(it.next\(\), result, temp\)\)) N
(   * foundChoose = true; else result.add\(temp\); } return true; }) N
(   * ) N
(   * else if \(e.getName\(\).equals\(RelaxNGConstants.ELEM_ELEMENT\) ||) N
(   * e.getName\(\).equals\(RelaxNGConstants.ELEM_EMPTY\) ||) N
(   * e.getName\(\).equals\(RelaxNGConstants.ELEM_ATTRIBUTE\)\) { // result.add\(down\);) N
(   * return getChoicePathsChildren\(e, result, down\); }) N
(   * ) N
(   * else if \(e.getName\(\).equals\(RelaxNGConstants.ELEM_GROUP\) ||) N
(   * e.getName\(\).equals\(RelaxNGConstants.ELEM_ONE_OR_MORE\) ||) N
(   * e.getName\(\).equals\(RelaxNGConstants.ELEM_DEFINE\)\) { return) N
(RNGModule.java) (Page 5/6) (Nov 06, 05 14:47) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(   * getChoicePathsChildren\(e, result, down\); }) c n
(   * ) N
(   * else if \(e.getName\(\).equals\(RelaxNGConstants.ELEM_START\)\) { return) N
(   * getChoicePathsChildren\(e, result, down\); } else { // throw new) N
(   * AssertionError\("Unhandled Relax NG Element: " + e\); return false; } }) N
(   * return false; }) N
(   * ) N
(   * public Set<Element> getAttributeDeclarations\(List<Integer> path\) { Set<Elem) N
(ent>) N
(   * result = new HashSet<Element>\(\); getAttributeDeclarations\(startElement,) N
(   * result, new LinkedList<Integer>\(path\)\); return result; }) N
(   * ) N
(   * void getAttributeDeclarations\(Element e, Set<Element> result, LinkedList<In) N
(teger>) N
(   * path\) { if \(e.getNamespaceURI\(\).equals\(RelaxNGConstants.NAMESPACE_URI\)\) {) N
(   * ) N
(   * if \(e.getName\(\).equals\(RelaxNGConstants.ELEM_REF\)\) { String name =) N
(   * e.attributeValue\(RelaxNGConstants.ATTR_NAME_QNAME\); e = resolve\(name,) N
(   * SELF\); getAttributeDeclarations\(e, result, path\); }) N
(   * ) N
(   * else if \(e.getName\(\).equals\(RelaxNGConstants.ELEM_CHOICE\)\) { Integer I =) N
(   * path.getFirst\(\); e = \(Element\) e.elements\(\).get\(I.intValue\(\)\);) N
(   * path.removeFirst\(\); // have to do a recurse here, as choices may be nested) N
(   * directly. getAttributeDeclarations\(e, result, path\); }) N
(   * ) N
(   * else if \(e.getName\(\).equals\(RelaxNGConstants.ELEM_ATTRIBUTE\)\) {) N
(   * result.add\(e\); }) N
(   * ) N
(   * else if \(e.getName\(\).equals\(RelaxNGConstants.ELEM_GROUP\) ||) N
(   * e.getName\(\).equals\(RelaxNGConstants.ELEM_ONE_OR_MORE\) ||) N
(   * e.getName\(\).equals\(RelaxNGConstants.ELEM_ZERO_OR_MORE\) ||) N
(   * e.getName\(\).equals\(RelaxNGConstants.ELEM_START\)\) {) N
(   * ) N
(   * for \(Iterator<Element> it = e.elementIterator\(\); it.hasNext\(\);\) {) N
(   * getAttributeDeclarations\(it.next\(\), result, path\); } /* } } else { throw) N
(   * new AssertionError\("Unhandled Relax NG Element: " + e\); } } } }) N
(   */) N
() p n
(  ) S
(/*) c n
(   * public Element getDeclaration\(LinkedList<Integer> path\) { return) N
(   * getDeclaration\(new LinkedList<Integer>\(path\), startElement\); }) N
(   * ) N
(   * public Element getDeclaration\(LinkedList<Integer> path, Element decl\) { if) N
(   * \(decl.getName\(\).equals\(RelaxNGConstants.ELEM_REF\)\) { String name =) N
(   * decl.attributeValue\(RelaxNGConstants.ATTR_NAME_QNAME\); decl = resolve\(name,) N
(   * SELF\); }) N
(   * ) N
(   * if \(decl.getQName\(\).equals\(RelaxNGConstants.ELEM_CHOICE_QNAME\)\) { Integer I) N
( =) N
(   * path.removeFirst\(\); int i = I.intValue\(\); Element cont =) N
(   * \(Element\)decl.elements\(\).get\(i\); return getDeclaration\(path, cont\); } else ) N
({) N
(   * Element result = \(Element\)decl.clone\(\); for \(Iterator<Element> children =) N
(   * decl.elementIterator\(\); children.hasNext\(\);\) { Element child =) N
(   * children.next\(\); result.add\(getDeclaration\(path, child\)\); } return result; ) N
(} }) N
(   */) N
() p n
(  ) S
(public) K
( ElementDecl cheatGet\(QName qn\) {) p n
(    ) S
(for) K
( \(ElementDecl decl : allElementDeclarations\) {) p n
(      ) S
(if) K
( \(decl.getName\(\).equals\(qn\)\)) p n
(        ) S
(return) K
( decl;) p n
(    }) N
(    ) S
(return) K
( ) p
(null) k
(;) p n
(  }) N
(}) N
(RNGModule.java) (Page 6/6) (Nov 06, 05 14:47) title
border
grestore
(Printed by Soren Kuula) rhead
(RNGModule.java) (3/3) (Tuesday November 15, 2005) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
