/* Generated By:JJTree: Do not edit this line. XPathStringLiteral.java */

package dongfang.xsltools.xpath2;

import dongfang.XPathConstants;

/*
 * Decision made: Content is without any quoted at head and tail. Decision
 * needed: Content stored escaped or not escaped? Escaped == Same as literal
 * XPath attributes, except that there are no quotes at head and tail. Unescaped ==
 * real meaning. Go for unescaped as a tentative solution...!!
 */
public class XPathStringLiteral extends XPathPredicateCarrier implements
    XPathFilterExpr {

  private String content = "";

  public XPathStringLiteral(int id) {
    super(id);
  }

  public XPathStringLiteral(XPathParser p, int id) {
    super(p, id);
  }

  public XPathStringLiteral() {
    this(0);
  }

  /*
   * Not used by parser, but used from within. Sting supplied is not escaped and
   * not quoted.
   */
  public XPathStringLiteral(String content) {
    this();
    setSweetContent(content);
  }

  void setContent(String content) {
    setSweetContent(XPathConstants.unescape(XPathConstants
        .stripLeadingTrailingQuotes(content)));
  }

  void setSweetContent(String content) {
    this.content = content;
  }

  /*
   * Return contents, no escaping and no quotes!
   */
  public String getSweetContent() {
    return content;
  }

  public short getType() {
    return TYPE_STRING;
  }

  /*
   * This is like getting the sweet contents, WITH escaping and WITH quoting.
   */
  @Override
public String toString() {
    return XPathConstants.addLeadingTrailingQuotes(XPathConstants
        .escape(content));
  }
}
