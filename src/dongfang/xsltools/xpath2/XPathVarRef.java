/* Generated By:JJTree: Do not edit this line. XPathVarRef.java */

package dongfang.xsltools.xpath2;

import java.util.Iterator;

import dongfang.xsltools.exceptions.XSLToolsException;

public class XPathVarRef extends XPathQNameExprBase implements XPathFilterExpr {
  public XPathVarRef(int id) {
    super(id);
  }

  public XPathVarRef(XPathParser p, int id) {
    super(p, id);
  }

  private XPathPredicateList getPredicateList() {
    return (XPathPredicateList) jjtGetChild(jjtGetNumChildren() - 1);
  }

  public boolean hasPredicates() {
    XPathPredicateList l = getPredicateList();
    return l.hasPredicates();
  }

  public Iterator<XPathExpr> predicates() {
    XPathPredicateList l = getPredicateList();
    return l.predicates();
  }

  @Override
  public XPathBase accept(XPathVisitor v) throws XSLToolsException {
    return v.visit(this);
  }

  public void addEmptyPredicateList() {
    jjtAddChild(new XPathPredicateList(), jjtGetNumChildren());
  }

  public short getType() {
    return TYPE_ANY; // TODO: sharpen
  }

  @Override
public String toString() {
    StringBuilder res = new StringBuilder();
    res.append('$');
    res.append(qname.getQualifiedName());
    res.append(jjtGetChild(0).toString());

    return res.toString();
  }
}
