<?xml version="1.0" encoding="utf-8"?>
<!-- params
twidth
mainpage
-->
<jsp:root xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns="http://www.w3.org/1999/xhtml" version="2.0">
	<jsp:directive.page language="java" session="true" isThreadSafe="true"
		isELIgnored="false" pageEncoding="utf-8" />
	<jsp:useBean id="validator" scope="session"
		class="dongfang.xsltools.context.InteractiveRequestResponseBean" />
	<c:set var="GRAPHVIZ_URL" value="http://www.graphviz.org" />
	<h2>Generated information</h2>
	<p>These are diagnostics and information resources, generated
	during analysis.</p>
	<table xmlns="http://www.w3.org/1999/xhtml" border="1"
		width="${param.twidth}">
		<c:forEach var="item" items="${validator.generatedResources}"
			varStatus="stat">
			<tr>
				<c:choose>
					<c:when test="${item.key == 'SEMANTICS_PRESERVED_STYLESHEET'}">
						<td>Semantics-preserved simplified stylesheet
						<ul>
							<c:url var="viewItemURL" value="stylesheetView.html?version=${item.key}" />
							<li><a href="${viewItemURL}">View / download</a></li>
						</ul>
						</td>
					</c:when>
					<c:when test="${item.key == 'APPROXIMATED_STYLESHEET'}">
						<td>Approximated stylesheet
						<ul>
							<li>
							<c:url var="viewItemURL" value="stylesheetView.html?version=${item.key}" />
							<a href="${viewItemURL}">View / download</a></li>
						</ul>
						</td>
					</c:when>
					<c:when test="${item.key == 'INPUT_TYPE'}">
						<td>Input type (diagnostic XML)
						<ul>
							<li>
							<c:url var="viewDiagnosticsURL" value="inputDiagnosticsView.html?key=${item.key}&amp;amp;size=HUGE&amp;amp;backlink=${param.mainpage}" />
							<a href="${viewDiagnosticsURL}">View / download diagnostics XML</a> : Diagnostics information about the
							input schema.</li>
							<!--<li><a href="Download.jspx?key=${item.key}">Download</a></li>-->
						</ul>
						</td>
					</c:when>
					<c:when test="${item.key == 'CONTROL_FLOW_GRAPH'}">
						<td>The control flow graph visualizes which of the templates
						in the stylesheet may invoke which. It is approximated to
						sometimes have flows that never actually occur, but it is still
						quite precise.
						<ul>
							<li>
							<c:url var="viewDiagnosticsURL" value="controlFlowGraphView.html?key=${item.key}&amp;amp;size=HUGE&amp;amp;backlink=${param.mainpage}" />
							<a href="${viewDiagnosticsURL}">View / download diagnostics XML</a> : Verbose and complete info about the
							control flow computed.</li>
							<li>View schemaless flow graph (
							<c:url var="viewFlowGraphURL" value="controlFlowGraph.png?key=SCHEMALESS_CONTROL_FLOW_GRAPH_AS_DOT&amp;amp;type=PNG" />
							<a href="${viewFlowGraphURL}">PNG</a>,
							<c:url var="viewFlowGraphURL" value="controlFlowGraph.ps?key=SCHEMALESS_CONTROL_FLOW_GRAPH_AS_DOT&amp;amp;type=PS" />
							<a href="${viewFlowGraphURL}">PS</a>) : A graph of control flow, computed without use of input schema
							information.</li>
							<li>View flow graph (
								<c:url var="viewFlowGraphURL" value="controlFlowGraph.png?key=CONTROL_FLOW_GRAPH_AS_DOT&amp;amp;type=PNG" />
							    <a href="${viewFlowGraphURL}">PNG</a>,
								<c:url var="viewFlowGraphURL" value="controlFlowGraph.ps?key=CONTROL_FLOW_GRAPH_AS_DOT&amp;amp;type=PS" />
								<a href="${viewFlowGraphURL}">PS</a>)
							: A graph of control flow, taking the input schema's restrictions
							into account.</li>
							<!-- <li><a href="m0l0.flowannotated">View flow-annotated stylesheet</a></li> -->
						</ul>
						</td>
					</c:when>
					<c:when test="${item.key == 'TRANSFORM_TYPE_XML_GRAPH'}">
						<td>Transform XML Graph: A description of what the stylesheet
						may output.
						<ul>
							<li>View XML Graph (
							<c:url var="viewXMLGraphURL" value="transformXMLGraph.png?key=TRANSFORM_TYPE_XML_GRAPH_AS_DOT&amp;amp;type=PNG" />
							<a href="${viewXMLGraphURL}">PNG</a>,
							<c:url var="viewXMLGraphURL" value="transformXMLGraph.ps?key=TRANSFORM_TYPE_XML_GRAPH_AS_DOT&amp;amp;type=PS" />
							<a href="${viewXMLGraphURL}">PS</a>)
							(server-generated images; generation will time out if graph is
							too large)</li>
							<li>
							<c:url var="transformDOTURL" value="transformXMLGraph.dot?key=TRANSFORM_TYPE_XML_GRAPH_AS_DOT&amp;amp;key=DOT" />
							<a href="${transformDOTURL}">Download .dot file</a> and use
							<a href="${GRAPHVIZ_URL}">Graphviz</a> to generate an image yourself. Please do this for large XML Graphs.</li>
							<li>
							<c:url var="xmlGraphURL" value="transformXMLGraph.zip?key=TRANSFORM_TYPE_XML_GRAPH" />
							<a href="${xmlGraphURL}">Download
							XML Graph (Zip)</a> : See <a href="http://www.brics.dk/schematools">BRICS Schematools</a></li>
						</ul>
						</td>
					</c:when>
					<c:when test="${item.key == 'OUTPUT_TYPE_XML_GRAPH'}">
						<td>Output type: As an XML Graph.
						<ul>
							<li>View XML Graph (
							<c:url var="viewXMLGraphURL" value="outputTypeXMLGraph.png?key=OUTPUT_TYPE_XML_GRAPH_AS_DOT&amp;amp;type=PNG" />
							<a href="${viewXMLGraphURL}">PNG</a>,
							<c:url var="viewXMLGraphURL" value="outputTypeXMLGraph.ps?key=OUTPUT_TYPE_XML_GRAPH_AS_DOT&amp;amp;type=PS" />
							<a href="${viewXMLGraphURL}">PS</a>)
							(server-generated images; generation will time out if graph is
							too large)</li>
							<li>
							<c:url var="viewDOTURL" value="outputTypeXMLGraph.dot?key=OUTPUT_TYPE_XML_GRAPH_AS_DOT&amp;amp;type=DOT" />
							<a href="${viewDOTURL}">Download
							.dot file</a> and use <a href="${GRAPHVIZ_URL}">Graphviz</a> to
							generate an image yourself. Please do this for large XML Graphs.</li>
							<li>
							<c:url var="xmlGraphURL" value="outputTypeXMLGraph.zip?key=OUTPUT_TYPE_XML_GRAPH" />
							<a href="${xmlGraphURL}">Download
							XML Graph (Zip)</a> : See <a href="http://www.brics.dk/schematools">BRICS
							Schematools</a></li>
						</ul>
						</td>
					</c:when>
					<c:otherwise>
						<td>Oops</td>
						<td>${item.key}</td>
					</c:otherwise>
				</c:choose>
			</tr>
		</c:forEach>
	</table>
</jsp:root>
